<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
  <title>Movies</title>

  <link rel="stylesheet" href="/stylesheets/movies.css" type="text/css" />

  <script src="/javascripts.<%= RAILS_ENV %>/dojo/dojo.js" type="text/javascript"
          djConfig="parseOnLoad:true"></script>

  <script type="text/javascript">
    var movies, moviesGrid;
    var people, peopleGrid;

    function installTooltips(grid, showTooltip) {
      var hideTooltip = function(e) {
	    dijit.hideTooltip(e.cellNode);
	    dijit._masterTT._onDeck=null;
	  };
      dojo.connect(grid, "onCellMouseOver", showTooltip);
      dojo.connect(grid, "onCellMouseOut", hideTooltip);
    }

    function buildMoviesGrid(movies) {
      var awardFormatter = function(awards) {
        return awards ? dojo.string.rep('*', awards.length) : '';
      };
  
      var grid = new dojox.grid.DataGrid({
        query: { title: '*' },
        store: movies,
        structure: [
          { field: "title", name: "Title", width: "auto" },
          { field: "release_year", name: "Year", width: "5em" },
          { field: "awards", name: "Awards", width: "10%", formatter: awardFormatter }
        ],
        rowsPerPage: 50,
        keepRows: 300
      }, 'movieslist');

      var awardIdx = 2; //### FIXME find by name
      installTooltips(grid, function(e) {
        if (e.cellIndex == awardIdx) {
          var movie = e.grid.getItem(e.rowIndex);
          if (movie.awards) {
            var msg = "<ul>" + 
              dojo.map(movie.awards, function(award) {
                return "<li>" + award + "</li>";
              }) +
              "</ul>";
            dijit.showTooltip(msg, e.cellNode);
          }
        }
      });
    
      return grid;
    }

    function buildPeopleGrid(people) {
      var grid = new dojox.grid.DataGrid({
        query: { name: '*' },
        store: people,
        structure: [
          { field: "name", name: "Name", width: "auto" }
        ]
      }, 'peoplelist');

      installTooltips(grid, function(e) {
        var person = e.grid.getItem(e.rowIndex);
        if (person.dob) {
          var msg = 'born ' + person.dob; //### TODO i18n
          dijit.showTooltip(msg, e.cellNode);
        }
      });
     
      return grid;
    }

    dojo.addOnLoad(function(){
      dojo.registerModulePath('moviedb', "/javascripts.<%= RAILS_ENV %>/moviedb");
      dojo.require('moviedb.movies');

      var movieSchema = {
        prototype: {
          displayTitle: function() { return this.title + ' (' + this.release_year + ')'; }
        }
      }
      movies = new moviedb.Store({ target: "/movies", schema: movieSchema });
      moviesGrid = buildMoviesGrid(movies);

      people = new moviedb.Store({ target: "/people" });
      peopleGrid = buildPeopleGrid(people);

      moviesGrid.startup();
      peopleGrid.startup();
    });
  </script>

</head>
<body class="tundra">

  <div dojoType="dijit.layout.BorderContainer" jsid="container" id="container" design="headline">
    <div dojoType="dijit.layout.ContentPane" region="top">
      <div class="headerWrapper">
        <h1>Movies</h1>
      </div>
    </div>
    <div dojoType="dijit.layout.ContentPane" region="center">
      <div id="movieslist"></div>
    </div>
    <div dojoType="dijit.layout.ContentPane" region="left">
      <div dojoType="dojo.data.ItemFileReadStore"
           url="/awards.json" jsId="awardsStore"></div>
      <div dojoType="dijit.tree.ForestStoreModel"
           rootLabel="Awards" store="awardsStore"
           childrenAttrs="awards"
           jsId="awardsModel"></div>
      <div dojoType="dijit.Tree" id="awardsTree" 
           model="awardsModel"
           showRoot="false"></div>
    </div>
    <div dojoType="dijit.layout.ContentPane" region="right">
      <div id="peoplelist"></div>
    </div>
    <div dojoType="dijit.layout.ContentPane" region="bottom">
      <div id="movieform">
        blablablabla
      </div>
    </div>
  </div>

</body>
</html>
