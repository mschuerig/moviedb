<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
  <title>Movies</title>

  <link rel="stylesheet" href="/stylesheets/movies.css" type="text/css" />

  <script src="/javascripts.<%= RAILS_ENV %>/dojo/dojo.js" type="text/javascript"
          djConfig="parseOnLoad:true"></script>

  <script type="text/javascript">
    var movies, moviesGrid;
    var people, peopleGrid;

    dojo.addOnLoad(function(){
      dojo.registerModulePath('moviedb', "/javascripts.<%= RAILS_ENV %>/moviedb");
      dojo.require('moviedb.movies');

      dojo.declare("moviedb.Store", dojox.data.JsonRestStore, {
        _processResults: function(results, deferred) {
          return results;
        },
        fetch: function(args) {
          console.log("*** fetch: ", args);
          var query = args.query;
          if (query && dojo.isObject(query)) {
            args.queryStr = '?' + this._matchingClause(query) + this._sortingClause(args.sort);
          }
          return this.inherited(arguments);
        },
        _matchingClause: function(query) {
          console.log("***fetch, query: ", query);
          return ''; //###
        },
        _sortingClause: function(sort) {
          console.log("***fetch, sort: ", sort);
          if (!dojo.isArray(sort) || sort.length === 0) return '';
          return '[' + dojo.map(sort, function(attr) {
            if (dojo.isObject(attr)) {
              return (attr.descending ? '\\' : '/') + attr.attribute;
            } else {
              return '/' + attr;
            }
          }).join(',') + ']';
        }
      });

      var movieSchema = {
        prototype: {
          displayTitle: function() { return this.title + ' (' + this.release_year + ')'; }
        }
      }
      movies = new moviedb.Store({ target: "/movies", schema: movieSchema });

      var awardFormatter = function(awards) {
        if (awards) {
          return dojo.map(awards, function(a) {
            return '<span title="' + a + '">*</span>';
          }).join();
        } else {
            return '';
        }
      };

      moviesGrid = new dojox.grid.DataGrid({
        query: { title: '*' },
        store: movies,
        structure: [
          { field: "title", name: "Title", width: "auto" },
          { field: "release_year", name: "Year", width: "5em" },
          { field: "awards", name: "Awards", width: "10%", formatter: awardFormatter }
        ],
        rowSelector: '20px',
        rowsPerPage: 50,
        keepRows: 300
      }, 'movieslist');

      people = new moviedb.Store({ target: "/people" });

      peopleGrid = new dojox.grid.DataGrid({
        query: { name: '*' },
        store: people,
        structure: [
          { field: "name", name: "Name", width: "auto" }
        ]
      }, 'peoplelist');

      moviesGrid.startup();
      peopleGrid.startup();
    });
  </script>

</head>
<body class="tundra">

  <div dojoType="dijit.layout.BorderContainer" jsid="container" id="container" design="headline">
    <div dojoType="dijit.layout.ContentPane" region="top">
      <div class="headerWrapper">
        <h1>Movies</h1>
      </div>
    </div>
    <div dojoType="dijit.layout.ContentPane" region="center">
      <div id="movieslist"></div>
    </div>
    <div dojoType="dijit.layout.ContentPane" region="left">
      <div dojoType="dojo.data.ItemFileReadStore"
           url="/awards.json" jsId="awardsStore"></div>
      <div dojoType="dijit.tree.ForestStoreModel"
           rootLabel="Awards" store="awardsStore"
           childrenAttrs="awards"
           jsId="awardsModel"></div>
      <div dojoType="dijit.Tree" id="awardsTree" 
           model="awardsModel"
           showRoot="false"></div>
    </div>
    <div dojoType="dijit.layout.ContentPane" region="right">
      <div id="peoplelist"></div>
    </div>
    <div dojoType="dijit.layout.ContentPane" region="bottom">
      <div id="movieform">
        blablablabla
      </div>
    </div>
  </div>

</body>
</html>
