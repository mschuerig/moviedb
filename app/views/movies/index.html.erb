<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
  <title>Movies</title>

  <link rel="stylesheet" href="/stylesheets/movies.css" type="text/css" />

  <script src="/javascripts/dojo/dojo.js" type="text/javascript"
          djConfig="parseOnLoad:false, debugAtAllCosts:false"></script>

  <script type="text/javascript">
    var moviesStore, moviesGrid;
    var peopleStore, peopleGrid;

    dojo.registerModulePath('moviedb', "/javascripts/moviedb");
    dojo.require('moviedb.movies');
    
    function buildMoviesGrid(store) {
      var awardsFormatter = function(awards) {
        return awards ? dojo.string.rep('*', awards.length) : '';
      };
      var yearFormatter = function(date) {
        return date ? 1900 + date.getYear() : '';
      };

      var grid = new dojox.grid.DataGrid({
        query: { title: '*' },
        sortInfo: -2,
        store: store,
        structure: [
          { field: "title", name: "Title", width: "auto" },
          { field: "releaseDate", name: "Year", width: "5em", formatter: yearFormatter },
          { field: "awards", name: "Awards", width: "15%", formatter: awardsFormatter }
        ],
        selectionMode: 'single',
        rowsPerPage: 50,
        keepRows: 300
      }, 'movieslist');

      grid.onCellContextMenu = function(e) {
        if (e.cell.field == "awards") {
          var movie = e.grid.getItem(e.rowIndex);
          if (movie.awards) {
            var awards = movie.awards;
            var awardsMenu = new dijit.Menu({targetNodeIds: e.cellNode});
            awardsMenu.addChild(new dijit.MenuItem({
              label: 'Overview',
              onClick: function() { dojo.publish('award.selected', [awards]) }
            }));
            awardsMenu.addChild(new dijit.MenuSeparator());
            dojo.forEach(awards, function(award) {
              awardsMenu.addChild(new dijit.MenuItem({
                label: award.title,
                onClick: function() { dojo.publish('award.selected', [award]) }
              }));
            });
            awardsMenu.startup();
            dojo.connect(awardsMenu, 'onClose', function() {
              awardsMenu.uninitialize();
            });
            awardsMenu._openMyself(e);
          }
        }
	  };
	  grid.onHeaderContextMenu = function(e) {
	    console.log('*** onHeaderContextMenu: ', e); //### REMOVE
	  };
    
      dojo.connect(grid, 'onSelected', function(idx) {
        dojo.publish('movie.selected', [grid.getItem(idx)]);
      });

      return grid;
    }

    function buildPeopleGrid(store) {
      var grid = new dojox.grid.DataGrid({
        query: { name: '*' },
        sortInfo: 1,
        store: store,
        rowsPerPage: 50,
        structure: [
          { field: "name", name: "Name", width: "auto" }
        ]
      }, 'peoplelist');
      
      moviedb.installTooltips(grid, function(e) {
        var person = e.grid.getItem(e.rowIndex);
        if (person.dob) {
          var msg = 'born ' + person.dob; //### TODO i18n
          dijit.showTooltip(msg, e.cellNode);
        }
      });
      
      return grid;
    }

    dojo.addOnLoad(function() {
      moviesStore = new moviedb.Store({ target: "/movies", schema: moviedb.schema.movie });
      moviesGrid = buildMoviesGrid(moviesStore);

      peopleStore = new moviedb.Store({ target: "/people", schema: moviedb.schema.person });
      peopleGrid = buildPeopleGrid(peopleStore);

      dojo.subscribe('movie.selected', function(m) {
        console.log("---> ", m); //### REMOVE
        dijit.byId('movieform').populate(moviesStore, m);
      });

      dojo.subscribe('award.selected', function() {
        console.log("** AWARD: ", arguments);
      });

      dojo.connect(moviesGrid, 'onCanSelect', function(rowIdx) {
        //### FIXME doesn't have an effect.
        var formIsChanged = dijit.byId('movieform').isChanged();
        console.log('CAN SELECT movie: ', !formIsChanged);
        return !formIsChanged;
      });

      dojo.parser.parse();

      dojo.connect(dijit.byId('peopleQueryForm'), 'onSubmit', function(event) {
        var value = dijit.byId('peopleQuery').attr('value')
        value = /^\s*$/.test(value) ? '*' : dojo.string.trim(value);
        peopleGrid.setQuery({ name: value });
        dojo.stopEvent(event);
      });
    });
  </script>

</head>
<body class="tundra">

  <div dojoType="dijit.layout.BorderContainer" id="container" design="headline">
<!--
    <div dojoType="dijit.layout.ContentPane" region="top">
      <div class="headerWrapper">
        <h1>Movies</h1>
      </div>
    </div>
-->
    <div dojoType="dijit.layout.TabContainer" id="tabs"
         region="left" tabPosition="left-h" tabStrip="true" splitter="true"
         style="width:30%; min-width:20em; height:100%">
      <div dojoType="dijit.layout.ContentPane" id="moviesPane"
           title="Movies" iconClass="movieIcon">
        <div id="movieslist"></div>
      </div>
      <div dojoType="dijit.layout.ContentPane" id="peoplePane"
           title="People" iconClass="peopleIcon">
        <div dojoType="dijit.layout.BorderContainer">
          <div dojoType="dijit.layout.ContentPane" region="top">
            <div dojoType="dijit.form.Form" id="peopleQueryForm">
              <div dojoType="dijit.form.TextBox" id="peopleQuery" style="width:70%"></div>
              <button dojoType="dijit.form.Button" type="submit"
                      iconClass="filterIcon" showLabel="true" style="width:20%"
                      >Filter</button>
            </div>
          </div>
          <div dojoType="dijit.layout.ContentPane" region="center">
            <div id="peoplelist" region="center"></div>
          </div>
        </div>
      </div>
      <div dojoType="dijit.layout.ContentPane" id="awardsPane"
           title="Awards" iconClass="awardIcon">
        <div dojoType="dojo.data.ItemFileReadStore"
             url="/awards.json" jsId="awardsStore"></div>
        <div dojoType="dijit.tree.ForestStoreModel"
             store="awardsStore"
             rootLabel="Awards"
             childrenAttrs="awards"
             jsId="awardsModel"></div>
        <div dojoType="dijit.Tree" jsId="awardsTree" 
             model="awardsModel"
             showRoot="false">
        </div>
      </div>
    </div>
    <div dojoType="dijit.layout.ContentPane" region="center">
      <form dojoType="moviedb.Form" id="movieform">
        <ul>
          <li>
            <label for="movie_title">Title:</label>
          </li>
          <li>
            <input type="text" dojoType="dijit.form.ValidationTextBox"
                   id="movie_title" name="movie[title]"
                   required="true" trim="true"
                   invalidMessage="Please enter the movie's title." />
          </li>
          <li>
            <label for="movie_release_date">Release Date:</label>
          </li>
          <li>
            <input type="text" dojoType="dijit.form.DateTextBox"
                   id="movie_release_date" name="movie[release_date]"
                   invalidMessage="Please enter a valid date." />
          </li>
          <li>
            <label for="movie_summary">Summary</label>
          </li>
          <li>
            <textarea dojoType="dijit.form.Textarea"
                      id="movie_summary" name="movie[summary]"
                      style="width:30em"></textarea>
          </li>
          <li>
            <button dojoType="dojox.form.BusyButton" type="submit"
                    busyLabel="Saving..."
                    >Save Changes</button>
          </li>
        </ul>
      </form>
    </div>
  </div>
  
  <div dojoType="dojox.widget.Toaster" positionDirection="tr-down" messageTopic="toast"></div>
</body>
</html>
